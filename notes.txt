DS -> 
    time complexity --> time -> input -> 
    space complexity 


    First come First Serve -> FiFo 

    LAst in First Out  -> LiFo 



 int a[] ={ 1,2,3,4,5,6,7,8,9,10};

    for(i=0,j=5;i<100;i++,j--){
         if(a[i] == 100 || a[j] == 100){
            //found 
         }
    }

    n/2 


                            DS 
    Linear                                  NoN Linear 
    Array                                   Tree               
    Stack                                   Graph 
    Queue 
    LinkedList

    search -> linear , binary search 
    sorting -> bubble , selection , insertion , merge, quick 
-----------------------------------------------------------------------


peep -> location -> item display


4
3
2  50 top 
1  40
0  60

peep(location) 
location = 1 
50 
location = 3 
60

4
3  70  top 
2  50   
1  40
0  60
location  = 1 
70 
location = 3 
40 


index = top - location + 1 

void peep(int location){
   int index = top  - location + 1;
   printf("\n %d ",stack[index]); 
}

---------------------------------------------------------------------------------

queue : Fifo 
   1) simple queue , insert() display()
   2) circular queue 
   3) priority queue 


----------------------------------------------------------------------------

{}[]
()()()
( ( ) )
(([))
[({})]

-------------------------------------------------
binary search ->

size = 10 
                       mid 
0  1  2  3  4  5  6  7  8  9  
10 20 30 40 50 60 70 80 90 100
                        min  max 

min=0
max=9 
search = 90

mid = (min+max)/2;  // 0+9/2 =>4   5+9/2 7   8+9/2 => 8 

if array[mid] == search ? 

else if array[mid] < search ?
         min = mid + 1 
else 
      max = mid-1 

---------------------------------------------------------------

98,76,54,32,34,56,78,90,108,85,56,23,11,5,100,2

